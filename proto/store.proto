syntax = "proto3";

package distributedstore;

service KeyValueStore {
  

  // Client functions

  rpc put(PutRequest) returns (PutResponse);

  rpc get(GetRequest) returns (GetResponse);

  rpc slowDown(SlowDownRequest) returns (SlowDownResponse);

  rpc restore(RestoreRequest) returns (RestoreResponse);


  // Server functions

  rpc prepare(PrepareRequest) returns (PrepareResponse);

  rpc commit(CommitRequest) returns (CommitResponse);

  rpc abort(AbortRequest) returns (AbortResponse);

  rpc register(RegisterRequest) returns (RegisterResponse);

  rpc unregister(UnregisterRequest) returns (UnregisterResponse);

  rpc addcon(AddConRequest) returns (AddConResponse);

  rpc privGet(GetRequest) returns (GetResponse);

}

// Server messages

message PrepareRequest {
  string key = 1;
  string value = 2;
}

message PrepareResponse {
  bool success = 1;
}

message CommitRequest {
  string key = 1;
}

message CommitResponse {
  bool success = 1;
}

message AbortRequest {
  string key = 1;
}

message AbortResponse {
  bool success = 1;
}

message RegisterRequest {
  string ip = 1;
  int32 port = 2;
  int32 weight = 3;
}

message RegisterResponse {
  bool success = 1;
}

message UnregisterRequest {
  string ip = 1;
  int32 port = 2;
}

message UnregisterResponse {
  bool success = 1;
}

message AddConRequest {
  int32 num = 1;
}

message AddConResponse {
  string node = 1;
  int32 weight = 2;
}

// Client messages

message PutRequest {
  string key = 1;
  string value = 2;
}

message PutResponse {
  bool success = 1;
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  string value = 1;
  bool found = 2;
}

message SlowDownRequest {
  int32 seconds = 1;
}

message SlowDownResponse {
  bool success = 1;
}

message RestoreRequest {}

message RestoreResponse {
  bool success = 1;
}

message Empty {
    
}